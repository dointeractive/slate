# Заказы

## Создание нового заказа

> Пример вызова для авторизованного пользователя:

```shell
curl "<%= config[:host] %>/orders" \
  -H "Authorization: Token token=#{TOKEN}" \
  -X POST
```

> Ответ будет содержать следующие данные:

```json
{
  "order": {
    "number": "R314234460",
    "total": 0.0,
    "item_count": 0,
    "item_total": 0.0,
    "ship_total": 0,
    "adjustment_total": 0.0,
    "shipment_state": null,
    "payment_state": null,
    "special_instructions": null,
    "created_at": "2016-09-23T16:19:29.284+03:00",
    "updated_at": "2016-09-23T16:19:29.284+03:00",
    "completed_at": null,
    "address": null,
    "shipments": [],
    "payment": null,
    "adjustments": []
  }
}
```

> Заголовок "Authorization" является необязательным для данного API метода. Пример вызова для неавторизованного пользователя:

```shell
curl "<%= config[:host] %>/orders" -X POST
```

Создать новый заказ можно выполнив следующий запрос:

`POST <%= config[:host] %>/orders`

Вызов можно выполнить как для авторизованных пользователей, так и для неавторизованных. Если заголовок `Authorization` не будет указан, то созданый заказ не привяжется к пользователю.
Для каждого пользователя может быть создано сколько угодно заказов, но если у текущего пользователя уже есть незавершенный заказ, сервер вернет ошибку с кодом `422` и заказ не будет создан.
Объект `Order`, возвращаемый сервером, содержит информацию о заказе, заказанных товарах и скидках.
В один заказ могут быть добавлены товары от разных ритейлеров. Заказанные товары, в разбивке по ритейлерам, можно получить из поля `shipments` заказа.

### Структура объекта Order

Атрибут | Описание
--------- | -----------
number | номер заказа
total | итоговая сумма заказа
item_total | сумма всех позиций заказа, без скидки
ship_total | стоимость доставки
adjustment_total | сумма скидок
item_count | общее количество товаров в заказе
shipment_state | состояние доставки
payment_state | состояние оплаты
special_instructions | примечание к заказу
address | адрес доставки
shipments | данные о добавленных товаров
payment | данные об оплате
adjustments | корректировки стоимости заказа (скидки, цена доставки)
promotion_codes | Список примененных промокодов

### Структура объекта Shipment

Объект `Shipment` создается на каждого ритейлера, товары которого были добавлены в заказ. `Shipment` соответствует партии товара из одного ритейлера.

Атрибут | Описание
--------- | -----------
id | id пакета
alerts | список предупреждений об ошибках в заказе
promotions | список предложенй о скидках и пр.
cost | стоимость доставки
item_total | стоимость всех позиций заказа
total | суммарная стоимость всех позиций, доставки и скидок
next_deliveries | предлагаемые окна доставки
retailer | информация о ритейлере
line_items | список позиций
delivery_window | окно доставки
state | состояние

`Shipment` может быть в следующих состояниях:

Состояние | Описание
--------- | --------
pending | начальное состояние
ready | оформление заказа завершено
canceled | доставка из данного ритейлера отменена
shipped | доставка из данного ритейлера выполнена

`pending` и `ready` по факту одно и тоже состояние

### Структура объекта Payment

Атрибут | Описание
--------- | -----------
number | номер платежа
state | состояние платежа
is_finalization_needed | требуется ли оформление платежа
finalization_url | url перехода для оформления платежа

Платеж может быть в следующих состояниях:

Состояние | Описание
--------- | --------
checkout | начальное состояние
completed | завершен
invalid | отказ на стороне платежной системы
processing | ожидает ответа платежной системы
void | отменен администратором

### Структура объекта LineItem

Атрибут | Описание
--------- | -----------
id | id позиции
quantity | количество товаров
price | стоимость одной позиции
total | сумма
customer_comment | комментарий пользователя
product_in_stock | наличие продукта в магазине
product | информация о продукте

## Повтор заказа

Чтобы повторить заказ, необходимо выполнить запрос:

`POST <%= config[:host] %>/orders/#{NUMBER}/clones`

В `NUMBER` передается номер того заказа, который необходимо повторить.

Если у пользователя есть текущий заказ, то позиции повторяемого заказа скопируются в текущий заказ пользователя. Если текущего заказа нет – будет создан новый заказ, содержащий позиции повторяемого заказа.

> Пример повтора заказа:

```shell
curl "<%= config[:host] %>/orders/#{NUMBER}/clones" \
  -H "Authorization: Token token=#{TOKEN}"
  -X POST
```

> В ответе вернется заказ:

```json
{
  "order": {
    "number": "R314234460",
    ...
    "shipments": [
      {
        ...
        "line_items": [
          {
            "id": 548260,
            "quantity": 1,
            "price": 229.89
            ...
          }
        ]
      }
    ]
  }
}
```


## Повтор подзаказа

Чтобы повторить подзаказ, необходимо выполнить запрос:

`POST <%= config[:host] %>/shipments/#{NUMBER}/clones`

В `NUMBER` передается номер того подзаказа, который необходимо повторить.

Если у пользователя есть текущий заказ, то позиции повторяемого заказа скопируются в текущий заказ пользователя. Если текущего заказа нет – будет создан новый заказ, содержащий позиции повторяемого заказа.

> Пример повтора подзаказа:

```shell
curl "<%= config[:host] %>/shipments/#{NUMBER}/clones" \
  -H "Authorization: Token token=#{TOKEN}"
  -X POST
```

> В ответе вернется заказ:

```json
{
  "order": {
    "number": "R314234460",
    ...
    "shipments": [
      {
        ...
        "line_items": [
          {
            "id": 548260,
            "quantity": 1,
            "price": 229.89
            ...
          }
        ]
      }
    ]
  }
}
```

## Получение заказа по номеру

> Пример команды:

```shell
curl "<%= config[:host] %>/orders/C27387-16"
```

> Ответ будет содержать следующие данные:

```json
{
  "order": {
    "number": "C27387-16",
    "total": 229.89,
    "item_total": 229.89,
    "item_count": 0,
    "ship_total": 0,
    "adjustment_total": 0.0,
    "shipment_state": null,
    "payment_state": null,
    "special_instructions": null,
    "created_at": "2016-10-11T12:28:03.000+03:00",
    "updated_at": "2016-10-11T12:28:04.000+03:00",
    "completed_at": null,
    "address": null,
    "shipments": [{
      "id": 1,
      "alerts": [{
        "message": "Добавьте больше товаров для заказа",
        "full_message": "Минимальная сумма заказа 229 р. в \"Metro C&C\" не набрана"
      }],
      "promotions": [{
        "message": "Бесплатная доставка при заказе на сумму от 2999"
      }],
      "total": 229.89,
      "item_total": 229.89,
      "next_deliveries": [{
        "price": 350.0,
        "summary": "сегодня, 09:00-12:00"
      }],
      "retailer": {
        "id": 1,
        "name": "Metro C&C",
        "color": "#003d7a",
        "logo": "https://s11.postimg.org/kg57t4yrn/metro_logo_s.png"
      },
      "line_items": [{
        "id": 548260,
        "quantity": 1,
        "price": 229.89,
        "description": "Цикорий Elza – растворимый гранулированный напиток с насыщенным кофейным вкусом и ароматом.Содержащийся в цикории инулин способствует улучшению обмена веществ и пищеварения. Оказывает успокаивающее действие на нервную систему, улучшает работу сердца. Цикорий повышает иммунитет,очищает организм. Он богат минеральными веществами, витаминами и микроэлементами.",
        "total": 229.89,
        "product_in_stock": true,
        "product": {
          "id": 960,
          "sku": "10963",
          "name": "Цикорий Elza гранулированный",
          "price": 229.89,
          "original_price": 229.89,
          "discount": 0.0,
          "items_per_pack": 1,
          "human_volume": "100 г.",
          "weight": 100.0,
          "description": "Цикорий Elza – растворимый гранулированный напиток с насыщенным кофейным вкусом и ароматом.Содержащийся в цикории инулин способствует улучшению обмена веществ и пищеварения. Оказывает успокаивающее действие на нервную систему, улучшает работу сердца. Цикорий повышает иммунитет,очищает организм. Он богат минеральными веществами, витаминами и микроэлементами.",
          "images": [{
            "mini_url": "http://instamart.ru/spree/products/3882/mini/10963.jpg?1473242393",
            "small_url": "http://instamart.ru/spree/products/3882/small/10963.jpg?1473242393",
            "product_url": "http://instamart.ru/spree/products/3882/product/10963.jpg?1473242393",
            "original_url": "http://instamart.ru/spree/products/3882/original/10963.jpg?1473242393"
          }]
        }
      }]
    }],
    "payment": null,
    "promotion_codes": []
  }
}
```

Получить заказ можно выполнив запрос:
`GET <%= config[:host] %>/orders/#{NUMBER}`

### Параметры запроса

Параметр | Обязательный | Описание
--------- | ------- | -----------
NUMBER | Да | Номер заказа

## Получение текущего заказа пользователя

> Пример команды:

```shell
curl "<%= config[:host] %>/orders/current" \
  -H "Authorization: Token token=#{TOKEN}"
```

> Ответ будет содержать следующие данные:

```json
{
  "order": {
    "number": "R314234460",
    "total": 0.0,
    "item_total": 0.0,
    "ship_total": 0,
    "adjustment_total": 0.0,
    "item_count": 0,
    "shipment_state": null,
    "payment_state": null,
    "special_instructions": null,
    "created_at": "2016-09-23T16:19:29.284+03:00",
    "updated_at": "2016-09-23T16:19:29.284+03:00",
    "completed_at": null,
    "address": null,
    "shipments": [],
    "payment": null,
    "adjustments": [],
    "promotion_codes": []
  }
}
```

Получить текущий заказ пользователя можно выполнив запрос:
`GET <%= config[:host] %>/orders/current`

В случае, если у пользователя нет текущего заказа, данный запрос вернет ошибку с кодом `404`

## Получение списка всех заказов

> Пример команды для получения всех заказов:

```shell
curl "<%= config[:host] %>/orders" \
  -H "Authorization: Token token=#{TOKEN}"
```

> Пример команды для получения всех активных заказов:

```shell
curl "<%= config[:host] %>/orders?status=active" \
  -H "Authorization: Token token=#{TOKEN}"
```

> Пример команды для получения всех отмененных заказов:

```shell
curl "<%= config[:host] %>/orders?status=canceled" \
  -H "Authorization: Token token=#{TOKEN}"
```

> Ответ будет содержать следующие данные:

```json
{
  "orders": [
    {
      "number": "R656752828",
      "total": 2285.48,
      "item_total": 2035.48,
      "ship_total": 250.0,
      "item_count": 16,
      "shipment_state": "canceled",
      "payment_state": "balance_due",
      "created_at": "2017-02-08T17:26:51.000+03:00",
      "updated_at": "2017-02-08T17:38:25.000+03:00",
      "completed_at": "2017-02-08T17:37:46.000+03:00",
      "shipments": [{
        "id": 126866,
        "cost": 250.0,
        "item_total": 2035.48,
        "total": 2285.48,
        "state": "canceled",
        "retailer": {
          "id": 1,
          "name": "Metro CC",
          "color": "#003d7a",
          "logo": "http://instamart.ru/logos/metro.png",
          "available": true,
          "environment": "production"
        },
        "delivery_window": {
          "id": 1818,
          "starts_at": "2017-02-09T11:00:00.000+03:00",
          "ends_at": "2017-02-09T14:00:00.000+03:00"
        }
      }]
    }
  ],

  "meta":{
    "current_page": 1,
    "next_page": null,
    "total_pages": 1,
    "per_page": 10,
    "total_count": 1
  }
}
```

Получить все заказы пользователя можно выполнив запрос:
`GET <%= config[:host] %>/orders`

Параметр | Обязательный | Описание
--------- | ------- | -----------
status | Нет | Статус заказа

Параметр "status" используется для фильтрации заказов:
- "active" - активные (принят, собирается, в пути)
- "complete" - завершенные
- "canceled" - отмененные

<aside class="notice">
  Объект заказа, возвращаемый API "списка заказов", содержит меньшее количество данных по сравнению с объектом, возвращаемым API "получения заказа по номеру", для уменьшения размера запроса.
</aside>

### Структура объекта Order

Атрибут | Описание
--------- | -----------
number | номер заказа
total | итоговая сумма заказа
item_total | сумма всех позиций заказа, без скидки
ship_total | стоимость доставки
item_count | общее количество товаров в заказе
shipment_state | состояние доставки
payment_state | состояние оплаты
shipments | данные о добавленных товаров

В ответ не включаются следующие поля:
- adjustment_total
- promo_total
- special_instructions
- address
- payment

### Структура объекта Shipment

Атрибут | Описание
--------- | -----------
id | id пакета
cost | стоимость доставки
item_total | стоимость всех позиций заказа
total | суммарная стоимость всех позиций, доставки и скидок
retailer | информация о ритейлере
delivery_window | окно доставки
state | состояние

В ответ не включаются следующие поля:
- alerts
- promotions
- next_deliveries
- line_items

## Применение промокода

Чтобы применить промокод к заказу, необходимо выполнить запрос:

`POST <%= config[:host] %>/orders/#{NUMBER}/promotions`

### Параметры запроса

Параметр | Обязательный | Описание
--------- | ------- | -----------
promotion_code | Да | Промокод(строка)

> Пример пременения промокода:

```shell
curl "<%= config[:host] %>/orders/#{NUMBER}/promotions" \
  -H "Authorization: Token token=#{TOKEN}"
  -X POST \
  -d "promotion_code=12345"
```

> В ответе вернется обновленный заказ:

```json
{
  "order": {
    "number": "R314234460",
    "total": 1236.7,
    "item_total": 1236.7,
    ...
    "promo_total": -100.0,
    "promotion_codes": [
      {
        "value": "12345",
        "description": "Суперскидка"
      }
    ]
  }
}
```

## Удаление промокода

Чтобы удалить промокод из заказа, необходимо выполнить запрос:

`DELETE <%= config[:host] %>/orders/#{NUMBER}/promotions/#{PROMOTION_CODE}`

### Параметры запроса

Параметр | Обязательный | Описание
--------- | ------- | -----------
NUMBER | Да | Номер заказа
PROMOTION_CODE | Да | Промокод(строка)

> Пример удаления промокода:

```shell
curl "<%= config[:host] %>/orders/R314234460/promotions/12345" \
  -H "Authorization: Token token=#{TOKEN}"
  -X DELETE \
```

> В ответе вернется обновленный заказ:

```json
{
  "order": {
    "number": "R314234460",
    "total": 1236.7,
    "item_total": 1236.7,
    ...
    "promo_total": 0,
    "promotion_codes": []
  }
}
```

## Получение списка позиций заказа

> Пример команды:

```shell
curl "<%= config[:host] %>/orders/R314234460/line_items" \
  -H "Authorization: Token token=#{TOKEN}"
```

> Ответ будет содержать следующие данные:

```json
{
  "line_items": [
    {
      "id": 1,
      "quantity": 1,
      "price": 1236.7,
      "total": 1236.7,
      "customer_comment": null,
      "product_in_stock": true,
      "product": {
        "id": 1,
        "sku": "20002",
        "name": "Product #0",
        "price": 1136.7,
        "original_price": 1236.7,
        "discount": 100,
        "human_volume": "100 г. x 12",
        "items_per_pack": 12,
        "images": [{
          "mini_url": "http://instamart.ru/spree/products/5946/mini/10006.jpg?1473242617",
          "small_url": "http://instamart.ru/spree/products/5946/small/10006.jpg?1473242617",
          "product_url": "http://instamart.ru/spree/products/5946/product/10006.jpg?1473242617",
          "preview_url": "http://instamart.ru/spree/products/5946/preview/10006.jpg?1473242617",
          "original_url": "http://instamart.ru/spree/products/5946/original/10006.jpg?1473242617"
        }]
      }
    }
  ],
  "meta": {
    "current_page": 1,
    "next_page": null,
    "total_pages": 1,
    "per_page": 10
  }
}
```

Получить все позиции заказа пользователя можно выполнив запросы:

`GET <%= config[:host] %>/orders/#{ORDER_NUMBER}/line_items`

`GET <%= config[:host] %>/shipments/#{SHIPMENT_NUMBER}/line_items`


## Получение списка отмененных позиций заказа

> Пример команды:

```shell
curl "<%= config[:host] %>/orders/R314234460/line_item_cancellations" \
  -H "Authorization: Token token=#{TOKEN}"
```

> Ответ будет содержать следующие данные:

```json
{
  "line_item_cancellations": [
    {
      "line_item": {
        "id": 4,
        "quantity": 6,
        "price": 1136.7,
        "total": 6820.2,
        "customer_comment": null,
        "product_in_stock": true,
        "product": {
          "id": 20,
          "sku": "10020",
          "name": "Product #19",
          "price": 1136.7,
          "original_price": 1236.7,
          "discount": 100,
          "human_volume": "100 г. x 6",
          "items_per_pack": 6,
          "images": []
        }
      }
    },
    {
      "line_item": {
        ...
      }
    }
  ]
}
```

Получить отмененные позиции заказа пользователя можно выполнив запросы:

`GET <%= config[:host] %>/orders/#{ORDER_NUMBER}/line_item_cancellations`

`GET <%= config[:host] %>/shipments/#{SHIPMENT_NUMBER}/line_item_cancellations`


### Структура объекта LineItemCancellation

Атрибут | Описание
--------- | -----------
line_item | Отмененная позиция из заказа

## Получение списка замененных позиций заказа

> Пример команды:

```shell
curl "<%= config[:host] %>/orders/R314234460/line_item_replacements" \
  -H "Authorization: Token token=#{TOKEN}"
```

> Ответ будет содержать следующие данные:

```json
{
  "line_item_replacements": [
    {
      "from_item": {
        "id": 3,
        "quantity": 1,
        "price": 1136.7,
        "total": 1136.7,
        "customer_comment": null,
        "product_in_stock": true,
        "product": {
          "id": 12,
          "sku": "10012",
          "name": "Product #11",
          "price": 1136.7,
          "original_price": 1236.7,
          "discount": 100,
          "human_volume": "100 г.",
          "items_per_pack": 1,
          "images": []
        }
      },
      "to_item": {
        "id": 35,
        "quantity": 1,
        "price": 1000,
        "total": 1000,
        "customer_comment": null,
        "product_in_stock": true,
        "product": {
          "id": 20,
          "sku": "10020",
          "name": "Product #19",
          "price": 1136.7,
          "original_price": 1236.7,
          "discount": 100,
          "human_volume": "100 г. x 6",
          "items_per_pack": 6,
          "images": []
        }
      }
    },
    {
      "from_item": {
        ...
      },
      "to_item": {
        ...
      }
    }
  ]
}
```

Получить замененные позиции заказа пользователя можно выполнив запросы:

`GET <%= config[:host] %>/orders/#{ORDER_NUMBER}/line_item_replacements`

`GET <%= config[:host] %>/shipments/#{SHIPMENT_NUMBER}/line_item_replacements`

### Структура объекта LineItemReplacement

Атрибут | Описание
--------- | -----------
from_item | Старая позиция заказа
to_item | Новая позиция заказа

## Добавление позиции заказа

```shell
curl "<%= config[:host] %>/line_items" \
  -d line_item[order_number]=R314234460 \
  -d line_item[product_id]=6 \
  -d line_item[quantity]=2
```
> В ответе вернется созданный `line_item`:

```json
{
  "line_item": {
    "id": 520884,
    "quantity": 2,
    "price": 35.99,
    "description": "Пробиотические продукты Активиа содержат уникальные бифидобактерия ActiRegularis, отобранные Данон за жизнеспособность и эффективную помощь организму. Ежедневная потребление Активиа помогает работе кишечника и способствует естественному очищению организма. Научные исследования подтвердили эффективность Активиа уже после 2-х недель ежедневного потребления. Изготовлено без добавления консервантов.",
    "total": 71.98,
    "product": {
      "id": 6,
      "sku": "10006",
      "name": "Напиток Danone Aktivia кисломолочный чернослив 2,0%",
      "price": 35.99,
      "original_price": 42.12,
      "discount": -6.13,
      "weight": 290.0,
      "items_per_pack": 1,
      "human_volume": "290 г.",
      "images": [{
        "mini_url": "http://instamart.ru/spree/products/5946/mini/10006.jpg?1473242617",
        "small_url": "http://instamart.ru/spree/products/5946/small/10006.jpg?1473242617",
        "product_url": "http://instamart.ru/spree/products/5946/product/10006.jpg?1473242617"
      }]
    }
  }
}
```

Добавить позицию к заказу можно выполнив запрос:

`POST <%= config[:host] %>/line_items`

### Параметры запроса

Параметр | Обязательный | Описание
--------- | ------- | -----------
line_item[order_number] | Да | Номер заказа
line_item[product_id] | Да | ID продукта
line_item[quantity] | Да | количество добавляемых позиций

<aside class="notice">
  После добавления новой позиции не забудьте перезагрузить заказ.
</aside>

## Редактирование позиции заказа

```shell
curl "<%= config[:host] %>/line_items/520884" \
  -d line_item[quantity]=10 \
  -X PUT
```
> Ответ будет содержать следующие данные:

```json
{
  "line_item": {
    "id": 520884,
    "quantity": 10,
    "price": 35.99,
    "description": "Пробиотические продукты Активиа содержат уникальные бифидобактерия ActiRegularis, отобранные Данон за жизнеспособность и эффективную помощь организму. Ежедневная потребление Активиа помогает работе кишечника и способствует естественному очищению организма. Научные исследования подтвердили эффективность Активиа уже после 2-х недель ежедневного потребления. Изготовлено без добавления консервантов.",
    "total": 359.9,
    "product": {
      "id": 6,
      "sku": "10006",
      "name": "Напиток Danone Aktivia кисломолочный чернослив 2,0%",
      "price": 35.99,
      "original_price": 42.12,
      "discount": -6.13,
      "weight": 290.0,
      "items_per_pack": 1,
      "human_volume": "290 г.",
      "images": [{
        "mini_url": "http://instamart.ru/spree/products/5946/mini/10006.jpg?1473242617",
        "small_url": "http://instamart.ru/spree/products/5946/small/10006.jpg?1473242617",
        "product_url": "http://instamart.ru/spree/products/5946/product/10006.jpg?1473242617"
      }]
    }
  }
}
```

Чтобы изменить количество единиц товара, необходимо выполнить запрос:

`PUT <%= config[:host] %>/line_items/#{ID}`

### Параметры запроса

Параметр | Обязательный | Описание
--------- | ------- | -----------
ID | Да | ID позиции заказа
line_item[quantity] | Нет | Количество единиц товара

<aside class="notice">
  После редактирования позиции не забудьте перезагрузить заказ.
</aside>

## Удаление позиции заказа

```shell
curl "<%= config[:host] %>/line_items/520884" \
  -X DELETE
```
> Ответ вернет результат с кодом 200

Чтобы удалить позицию заказа, необходимо выполнить запрос:

`DELETE <%= config[:host] %>/line_items/#{ID}`

### Параметры запроса

Параметр | Обязательный | Описание
--------- | ------- | -----------
ID | Да | ID позиции заказа

<aside class="notice">
  После добавления новой позиции не забудьте перезагрузить заказ.
</aside>

## Оформление заказа

> Пример команды для выбора способа замены:

```shell
curl "<%= config[:host] %>/orders/#{NUMBER}" \
  -H "Authorization: Token token=#{TOKEN}" \
  -X PUT \
  -d "order[replacement_policy_id]=1"
```
> Если данные были указаны верно, ответ будет содержать json-документ заказа:

```json
{
  "number": "R307128032",
  "item_total": 0.0,
  "total": 0.0,
  "ship_total": 0.0,
  "state": "cart",
  "adjustment_total": 0.0,
  "user_id": 1,
  "created_at": "2014-07-06T18:52:33.724Z",
  "updated_at": "2014-07-06T18:52:33.752Z",
  "completed_at": null,
  "shipment_state": null,
  "payment_state": null,
  "special_instructions": null,
  "total_quantity": 0,
  "address": {
    "id": 1,
    "city": "Москва",
    "full_address": "Старая Басманная 3"
  },
  "shipments": [...],
  "payment": null,
  "replacement_policy": {
    "id": 1,
    "description": "Позвонить мне. Если не удастся, выбирает сборщик."
  },
  "adjustments": []
}
```

> Пример команды для выбора адреса доставки и заполнения коментария доставки:

```shell
curl "<%= config[:host] %>/orders/#{NUMBER}" \
  -H "Authorization: Token token=#{TOKEN}" \
  -X PUT \
  -d "order[address_attributes][id]=1" \
  -d "order[address_attributes][instructions]=1"
```
> Если данные были указаны верно, ответ будет содержать json-документ заказа:

```json
{
  "number": "R307128032",
  "item_total": 0.0,
  "total": 0.0,
  "ship_total": 0.0,
  "state": "cart",
  "adjustment_total": 0.0,
  "user_id": 1,
  "created_at": "2014-07-06T18:52:33.724Z",
  "updated_at": "2014-07-06T18:52:33.752Z",
  "completed_at": null,
  "shipment_state": null,
  "payment_state": null,
  "special_instructions": null,
  "total_quantity": 0,
  "address": {
    "id": 1,
    "city": "Москва",
    "full_address": "Старая Басманная 3"
  },
  "shipments": [...],
  "payment": null,
  "adjustments": []
}
```

> Пример команды для заполнения контактного телефона:

```shell
curl "<%= config[:host] %>/orders/#{NUMBER}" \
  -H "Authorization: Token token=#{TOKEN}" \
  -X PUT \
  -d "order[phone_attributes][value]=+7(495)111-22-33"
```

> Формат телефона не имеет значения, необходимо только чтобы был код из 3х цифр и номер из 7. Также необходимо учесть текущее ограничение: для сохранения номера телефона у заказа должен быть адрес. Т.е. телефон можно сохранить либо вместе с адресом, либо если адрес уже сохранен.

> Пример команды выбора интервала и способа доставки (id шипмента - 1):

```shell
curl "<%= config[:host] %>/orders/#{NUMBER}" \
  -H "Authorization: Token token=#{TOKEN}" \
  -d "order[shipments_attributes][id]=1"
  -d "order[shipments_attributes][delivery_window_id]=1"
  -d "order[shipments_attributes][shipping_method_id]=1"
```

> Пример выбора метода оплаты:

```shell
curl "<%= config[:host] %>/orders/#{NUMBER}" \
  -H "Authorization: Token token=#{TOKEN}" \
  -d "order[payment_attributes][payment_tool_id]=1"
```

> В ответе вернется заказ с дополнительным объектом payment:

```json
{
  "number": "R307128032",
  ...
  "payment": {
    "number": 21156,
    "state": "checkout",
    "is_finalization_needed": false,
    "finalization_url": null
  }
}
```

Чтобы заполнить информацию о заказе, необходимо выполнить запрос:

`PUT <%= config[:host] %>/orders/#{NUMBER}`

### Выбор способа замен
Получить список способов замен товаров при сборке заказа можно, [выполнив запрос](#sposoby-zamien)

### Выбор способа доставки и времени доставки

Получить список способов доставки, необходимый для оформления заказа, можно выполнив запрос:

`GET <%= config[:host] %>/shipping_methods`

Окна доставки можно получить, выполнив запрос:

`GET <%= config[:host] %>/shipments/#{SHIPMENT_ID}/delivery_windows`

которому можно передать параметр `date` для выбора окон доставки за конкретный день.

### Выбор способа оплаты

Получить список способов оплаты, необходимый для оформления платежа, можно выполнив запрос:

`GET <%= config[:host] %>/payment_tools`

### Параметры запроса

Параметр | Обязательный | Описание
--------- | ------- | -----------
NUMBER | Да | Номер заказа
order[address_attributes][id] | Да (для завершения) | Адрес доставки
order[address_attributes][instructions] | - | Комментарий к заказу
order[shipments_attributes][][id] | Да | id shipment'а
order[shipments_attributes][][delivery_window_id] | Да | id слота доставки
order[shipments_attributes][][shipping_method_id] | Да | id cпособа доставки
order[payment_attributes][payment_tool_id] | Да | id источника оплаты
order[replacement_policy_id] | Да | id способа замены

## Отмена заказа

Чтобы отменить заказ, необходимо выполнить запрос:

`POST <%= config[:host] %>/orders/#{NUMBER}/cancellations`

### Параметры запроса

Параметр | Обязательный | Описание
--------- | ------- | -----------
reason | Да | Причина отмены

> Пример отмены заказа:

```shell
curl "<%= config[:host] %>/orders/#{NUMBER}/cancellations" \
  -H "Authorization: Token token=#{TOKEN}"
  -X POST \
  -d "reason=Причина нет денег"
```

> В ответе вернется созданная отмена заказа с объектом order:

```json
{
  "cancellation": {
    "reason": "Причина нет денег",
    "order": {
      "number": "R314234460",
      ...
      "state": "cancelled"
    }
  }
}
```

## Завершение заказа

Чтобы завершить заказ, необходимо выполнить запрос:

`POST <%= config[:host] %>/orders/#{NUMBER}/completion`

## Очистка заказа

Чтобы очистить заказ, необходимо выполнить запрос:

`DELETE <%= config[:host] %>/orders/#{NUMBER}/shipments`

## Очистка подзаказа

Чтобы очистить подзаказ, необходимо выполнить запрос:

`DELETE <%= config[:host] %>/shipments/#{NUMBER}`
